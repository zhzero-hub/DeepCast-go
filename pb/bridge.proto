// bridge.proto
// [python quickstart](https://grpc.io/docs/quickstart/python.html#run-a-grpc-application)

syntax = "proto3";

package pb;
option go_package = "../grpc";
import "common.proto";

service TrainApi {
  rpc SayHello(SayHelloRequest) returns (SayHelloResponse) {}
  rpc TrainStep(TrainStepRequest) returns (TrainStepResponse) {}
  rpc ResetEnv(ResetEnvRequest) returns (ResetEnvResponse) {}
}

service ServiceApi {
  rpc Service(ServiceRequest) returns (ServiceResponse) {}
  rpc SystemInfo(SystemInfoRequest) returns (SystemInfoResponse) {}
  rpc TaskManagerInfo(TaskManagerInfoRequest) returns (TaskManagerInfoResponse) {}
  rpc BackgroundInfo(BackgroundInfoRequest) returns (BackgroundInfoResponse) {}
}

message SayHelloRequest {
  string msg = 1;
}

message SayHelloResponse {
  string msg = 1;
}

message TrainStepRequest {
  Base Base = 1;
  Action Action = 2;
}

message TrainStepResponse {
  Base Base = 1;
  State State = 2;
  Feedback Feedback = 3;
}

message ResetEnvRequest {
  Base Base = 1;
}

message ResetEnvResponse {
  Base Base = 1;
  State State = 2;
}

message ServiceRequest {
  Base Base = 1;
}

message ServiceResponse {
  Base Base = 1;
  State State = 2;
}

message SystemInfoRequest {
  Base Base = 1;
}

message SystemInfoResponse {
  Base Base = 1;
  SystemInfo SystemInfo = 2;
}

message TaskManagerInfoRequest {
  Base Base = 1;
}

message TaskManagerInfoResponse {
  Base Base = 1;
  TaskManagerInfo TaskManagerInfo = 2;
}

message BackgroundInfoRequest {
  Base Base = 1;
}

message BackgroundInfoResponse {
  Base Base = 1;
  BackgroundInfo BackgroundInfo = 2;
}